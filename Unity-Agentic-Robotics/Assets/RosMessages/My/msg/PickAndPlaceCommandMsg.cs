//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.My
{
    [Serializable]
    public class PickAndPlaceCommandMsg : Message
    {
        public const string k_RosMessageName = "my_msgs/PickAndPlaceCommand";
        public override string RosMessageName => k_RosMessageName;

        //  my_msgs/msg/PickAndPlaceCommand.msg
        public string command_type;
        //  "pick_all", "pick_specific", or "count_objects"
        public string object_id;
        //  ID of the specific object to pick
        public bool left_to_right;
        //  Direction for pick_all command (false for left to right, true for right to left)
        public Geometry.PointMsg target_position;
        //  Position to place the object

        public PickAndPlaceCommandMsg()
        {
            this.command_type = "";
            this.object_id = "";
            this.left_to_right = false;
            this.target_position = new Geometry.PointMsg();
        }

        public PickAndPlaceCommandMsg(string command_type, string object_id, bool left_to_right, Geometry.PointMsg target_position)
        {
            this.command_type = command_type;
            this.object_id = object_id;
            this.left_to_right = left_to_right;
            this.target_position = target_position;
        }

        public static PickAndPlaceCommandMsg Deserialize(MessageDeserializer deserializer) => new PickAndPlaceCommandMsg(deserializer);

        private PickAndPlaceCommandMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.command_type);
            deserializer.Read(out this.object_id);
            deserializer.Read(out this.left_to_right);
            this.target_position = Geometry.PointMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.command_type);
            serializer.Write(this.object_id);
            serializer.Write(this.left_to_right);
            serializer.Write(this.target_position);
        }

        public override string ToString()
        {
            return "PickAndPlaceCommandMsg: " +
            "\ncommand_type: " + command_type.ToString() +
            "\nobject_id: " + object_id.ToString() +
            "\nleft_to_right: " + left_to_right.ToString() +
            "\ntarget_position: " + target_position.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
